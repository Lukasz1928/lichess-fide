{"version":3,"sources":["components/Home/NameForm/NameForm.js","components/Home/About/About.js","components/Home/Home/Home.js","components/Result/Stats/Lichess/Rating/LichessRatingDisplay.js","components/Result/Stats/Lichess/Ratings/LichessRatingsDisplay.js","components/Result/Stats/Estimated/Rating/EstimatedRatingDisplay.js","components/Result/Stats/Estimated/Ratings/EstimatedRatingsDisplay.js","calculation/missing_values.js","calculation/fide.js","components/Result/Stats/Fide/FideRatingDisplay.js","components/Result/Result/Result.js","components/App/App.js","serviceWorker.js","index.js"],"names":["NameForm","props","state","id","handleChange","bind","handleSubmit","event","this","setState","target","value","history","push","onSubmit","className","type","onChange","React","Component","withRouter","About","Home","LichessRatingDisplay","variant","rating","LichessRatingsDisplay","ratings","EstimatedRatingDisplay","EstimatedRatingsDisplay","calculate_missing_values","stats","console","log","ratingDiffs","variants","filled_ratings","forEach","v","established","filter","length","prov","expecteds","est","ex","reduce","a","b","toFixed","calculate_fide_rating","coefs","regression","coefs_order","fide","c","i","FideRatingDisplay","Result","player_id","queryString","parse","location","search","lichess","bullet","blitz","rapid","classical","estimates","url","fetch","then","response","json","data","fide_rating","App","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ad751b49.chunk.js","sourcesContent":["import React from 'react';\r\nimport {withRouter} from \"react-router\";\r\nimport './NameForm.css';\r\n\r\nclass NameForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {id: ''};\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({id: event.target.value});\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        this.props.history.push(`/result?id=${this.state.id}`);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit} className=\"App-form\">\r\n                <label>\r\n                    Enter your lichess.org username below to check it out:<br/>\r\n                    <input type=\"text\" value={this.state.id} onChange={this.handleChange} />\r\n                </label><br/>\r\n                <input type=\"submit\" value=\"Analyze!\" />\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(NameForm);","import * as React from \"react\";\r\nimport '../../../index.css';\r\nimport './About.css'\r\n\r\n\r\nclass About extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"App-about\">\r\n                <label>How does it work?</label>\r\n                <div className=\"App-description\">\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed felis massa, euismod ac venenatis non, finibus vel purus. Sed tortor velit, lacinia non augue suscipit, faucibus imperdiet dui. In lobortis fringilla nulla non ultricies. Ut gravida enim sed dolor ultrices, a bibendum dolor euismod. Etiam dignissim dui et arcu mollis iaculis. Nulla at euismod lacus. Nunc varius consequat est, sit amet pretium erat mollis at. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Nam at massa luctus, feugiat lacus ut, varius purus. Donec at magna augue. Suspendisse condimentum metus lorem, sit amet faucibus mi congue eget.\r\n                    Aliquam erat volutpat. Donec fringilla fermentum suscipit. Donec massa est, porttitor eu enim vitae, luctus ultrices tellus. Sed at est eu mauris convallis aliquet. Suspendisse at viverra lacus. Sed non aliquam lectus. Ut in maximus diam. Nullam arcu arcu, iaculis sed nunc eget, imperdiet tincidunt velit. Proin eget libero at nulla pretium blandit id quis ante. Praesent non tempus enim. Morbi placerat eros sit amet mi ullamcorper scelerisque. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Pellentesque dignissim est eget lectus rhoncus, et ultrices lorem fermentum. Duis aliquet massa non enim dapibus, in tristique lectus malesuada.\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;","import * as React from \"react\";\r\nimport NameForm from \"../NameForm/NameForm\";\r\nimport '../../../index.css';\r\nimport About from \"../About/About\";\r\n\r\n\r\nclass Home extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <header className=\"App-header\">\r\n                    <About/>\r\n                    <NameForm/>\r\n                </header>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport './LichessRatingDisplay.css';\r\n\r\nclass LichessRatingDisplay extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Rating-display\">\r\n                <label>Variant: {this.props.variant}</label><br/>\r\n                <label>Rating: {this.props.rating[0]}</label><br/>\r\n                <label>Rating deviation: {this.props.rating[1]}</label>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LichessRatingDisplay;","import * as React from \"react\";\r\nimport '../../../Result/Result.css';\r\n\r\nimport LichessRatingDisplay from \"../Rating/LichessRatingDisplay\";\r\n\r\nclass LichessRatingsDisplay extends React.Component {\r\n    render() {\r\n        let ratings = this.props.ratings;\r\n        return (\r\n            <div id=\"RatingDisplayContainer\">\r\n                Lichess.org stats:<br/>\r\n                <LichessRatingDisplay variant=\"bullet\" rating={ratings['bullet']}/>\r\n                <LichessRatingDisplay variant=\"blitz\" rating={ratings['blitz']}/>\r\n                <LichessRatingDisplay variant=\"rapid\" rating={ratings['rapid']}/>\r\n                <LichessRatingDisplay variant=\"classical\" rating={ratings['classical']}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LichessRatingsDisplay;","import React from \"react\";\r\nimport './EstimatedRatingDisplay.css';\r\n\r\nclass EstimatedRatingDisplay extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Rating-display\">\r\n                <label>Variant: {this.props.variant}</label><br/>\r\n                <label>Estimated rating: {this.props.rating}</label><br/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EstimatedRatingDisplay;","import * as React from \"react\";\r\nimport EstimatedRatingDisplay from \"../Rating/EstimatedRatingDisplay\";\r\n\r\n\r\nclass EstimatedRatingsDisplay extends React.Component {\r\n    render() {\r\n        let ratings = this.props.ratings;\r\n        return (\r\n            <div id=\"RatingDisplayContainer\">\r\n                Estimated stats:<br/>\r\n                <EstimatedRatingDisplay variant=\"bullet\" rating={ratings['bullet']}/>\r\n                <EstimatedRatingDisplay variant=\"blitz\" rating={ratings['blitz']}/>\r\n                <EstimatedRatingDisplay variant=\"rapid\" rating={ratings['rapid']}/>\r\n                <EstimatedRatingDisplay variant=\"classical\" rating={ratings['classical']}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EstimatedRatingsDisplay;","import ratingDiffs from '../resources/ranking-differences.json';\r\n\r\n\r\nfunction calculate_missing_values(stats) {\r\n    console.log(ratingDiffs);\r\n    let variants = ['bullet', 'blitz', 'rapid', 'classical'];\r\n    let established_threshold = 90;\r\n    var filled_ratings = {};\r\n    variants.forEach(v => {filled_ratings[v] = 1500;});\r\n    let established = variants.filter(v => stats[v][1] <= established_threshold);\r\n    if(established.length === 0) {\r\n        return filled_ratings;\r\n    }\r\n    established.forEach(v => {filled_ratings[v] = stats[v][0];});\r\n    let provisional = variants.filter(v => stats[v][1] > established_threshold);\r\n    provisional.forEach(prov => {\r\n        let expecteds = [];\r\n        established.forEach(est => {\r\n            const ex = stats[est][0] + ratingDiffs[est][prov];\r\n            expecteds.push(ex);\r\n        });\r\n        filled_ratings[prov] = expecteds.reduce((a, b) => a + b, 0) / expecteds.length;\r\n    });\r\n    variants.forEach(v => {\r\n       filled_ratings[v] = filled_ratings[v].toFixed(0);\r\n    });\r\n    return filled_ratings;\r\n}\r\n\r\nexport default calculate_missing_values;","import * as regression from '../resources/regression';\r\n\r\nfunction calculate_fide_rating(stats) {\r\n    let coefs = regression['coefs'];\r\n    let coefs_order = regression['coefs_order'];\r\n    let fide = regression['intercept'];\r\n    coefs.forEach((c, i) => {\r\n        fide += c * stats[coefs_order[i]];\r\n    });\r\n    return fide.toFixed();\r\n}\r\n\r\nexport default calculate_fide_rating;","import * as React from \"react\";\r\n\r\n\r\nclass FideRatingDisplay extends React.Component {\r\n    render() {\r\n        let rating = this.props.rating;\r\n        return (\r\n            <div id=\"RatingDisplayContainer\">\r\n                Estimated FIDE rating:<br/>\r\n                <label>{rating}</label>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FideRatingDisplay;","import * as React from \"react\";\r\nimport './Result.css';\r\nimport queryString from 'query-string';\r\n\r\nimport LichessRatingsDisplay from \"../Stats/Lichess/Ratings/LichessRatingsDisplay\";\r\nimport EstimatedRatingsDisplay from \"../Stats/Estimated/Ratings/EstimatedRatingsDisplay\";\r\nimport calculate_missing_values from \"../../../calculation/missing_values\";\r\nimport calculate_fide_rating from \"../../../calculation/fide\";\r\nimport FideRatingDisplay from \"../Stats/Fide/FideRatingDisplay\";\r\n\r\n\r\nclass Result extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.player_id = queryString.parse(this.props.location.search).id;\r\n        this.state = {\r\n            lichess: {\r\n                bullet: [],\r\n                blitz: [],\r\n                rapid: [],\r\n                classical: []\r\n            },\r\n            estimates: {\r\n                bullet: null,\r\n                blitz: null,\r\n                rapid: null,\r\n                classical: null\r\n            },\r\n            fide: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const url = `https://lichess.org/api/user/${this.player_id}`;\r\n        fetch(url)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                let bullet_rating = [data['perfs']['bullet']['rating'], data['perfs']['bullet']['rd']];\r\n                let blitz_rating = [data['perfs']['blitz']['rating'], data['perfs']['blitz']['rd']];\r\n                let rapid_rating = [data['perfs']['rapid']['rating'], data['perfs']['rapid']['rd']];\r\n                let classical_rating = [data['perfs']['classical']['rating'], data['perfs']['classical']['rd']];\r\n                let ratings = {\r\n                    bullet: bullet_rating,\r\n                    blitz: blitz_rating,\r\n                    rapid: rapid_rating,\r\n                    classical: classical_rating\r\n                };\r\n                let est = calculate_missing_values(ratings);\r\n                let fide_rating = calculate_fide_rating(est);\r\n\r\n                this.setState({\r\n                    lichess: ratings,\r\n                    estimates: est,\r\n                    fide: fide_rating\r\n                });\r\n\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Result\">\r\n                <header className=\"Result-header\">\r\n                    <label id=\"Top-info-text\">{this.player_id} profile analysis</label>\r\n                    <LichessRatingsDisplay id=\"Lichess-display\" ratings={this.state['lichess']}/>\r\n                    <EstimatedRatingsDisplay id=\"Estimated-display\" ratings={this.state['estimates']}/>\r\n                    <FideRatingDisplay id=\"Fide-display\" rating={this.state['fide']}/>\r\n                </header>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Result;","import React from 'react';\r\nimport './App.css';\r\nimport Home from '../Home/Home/Home';\r\nimport Result from '../Result/Result/Result';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"container\">\r\n        <Route exact path=\"/\" component={Home}/>\r\n        <Route path=\"/result\" component={Result}/>\r\n        <Route component={Home}/>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}